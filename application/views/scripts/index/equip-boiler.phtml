<?php
/**
 * Steam Calculators
 *
 * @package    View_Scripts
 * @subpackage Equipment Calculators
 * @version    beta
 * @author     Michael B Muller
 * <mbm@analyticalenergy.com>
 * 
 */

$titles = Steam_Support::descriptions('Equipment', 'boiler');
$linkLocation = 'equipBoiler';
?>
<h1><?php echo $this->translator->_($titles[0]." Calculator");?>
    <span style='position: relative; top: -3px; left: 8px; font-size: .55em; border: 1px solid black; padding: 1px; padding-left: 3px; padding-right: 3px; background-color: #ddd;'
    ><a  href="tutorials?vid=boiler"><?php echo $this->translator->_("watch tutorial");?></a></span>
    <span style='position: relative; top: -3px; left: 8px; font-size: .55em; border: 1px solid black; padding: 1px; padding-left: 3px; padding-right: 3px; background-color: #ddd;'
    ><a href="SSMTGuide.pdf#page=19"><?php echo $this->translator->_("view guide");?></a></span>
</h1>

<h3><?php echo $this->translator->_($titles[1]);?></h3><BR>

<?php   
$mS = Steam_MeasurementSystem::getInstance();
$boilerForm = new Steam_Forms_Boiler();
$formValid = false;
//Load Saved Form Data
$formData = new Zend_Session_Namespace('formData');

//Populate, validate, or reset form
if (isset($_GET['reset'])) unset($formData->boiler);
$examples = Steam_DataGenerator::examples('boiler');
if (isset($_GET['random']) and isset($examples[$_GET['random']])) $_POST = Steam_DataGenerator::boiler($_GET['random']);
if (!isset($_POST['Enter']) and isset($formData->boiler)){
    $_POST = $formData->boiler->unload();
    $_POST['Enter'] = 'Enter';
}
if (isset($_POST['Enter'])) {
    if ($formValid = $boilerForm->isValid($_POST)){
        $formData->boiler = new Steam_DTO('boiler', $boilerForm->getValues() );
    }
}
?>
  
<script type="text/javascript">
    $(document).ready(function() {               
        $('#examplesA').hide();                  
        $('#examplesB').hide();            
        $('#examplesHint').show();         
        
        $('#exampleTable').mouseover(function(){ $('#examplesA').show();$('#examplesB').show();$('#examplesHint').hide(); });
        $('#exampleTable').mouseout(function(){ $('#examplesA').hide();$('#examplesB').hide(); $('#examplesHint').show();});
                                                                   
        <?php         
        echo Steam_StdForm::hintDetails(array(
                        'type' => 'critPressure',
                        'fieldID' => "daPressure",
                        'title' => "Deaerator Pressure",
                        'text' => "Operating pressure of the deaerator used to determine the feedwater properties.<BR><span style='font-style: italic; color: red;'>MUST also be lower than steam pressure</span>",
                    ));                    
        echo Steam_StdForm::hintDetails(array(
                        'type' => 'combustEff',
                        'fieldID' => "combustEff",
                    ));           
        echo Steam_StdForm::hintDetails(array(
                        'type' => 'massflow',
                        'fieldID' => "massFlow",
                        'title' => "Steam Mass Flow",
                        'text' => "Mass flow of steam generated by the boiler.",            
                    )); 
        echo Steam_StdForm::hintDetails(array(
                        'type' => 'blowdown',
                        'fieldID' => "blowdownRate",
                        'title' => "Blowdown Rate",                        
                        'text' => "Percent of feedwater massflow leaving the boiler as blowdown.<BR><span style='font-style: italic;'>-Generally 1% to 5%",
                    ));   
        echo $boilerForm->jqueryAdd(); 
        ?>       
    });
</script>

<div style="position: relative;">
    <div style="float: left;"> 
        <form method="POST" action="<?php echo $linkLocation;?>">
            <table class='data'>        
                <tr>
                    <th><?php echo $this->translator->_('Deaerator Pressure');?>*</th><td><?php echo $boilerForm->daPressure->renderViewhelper()." ".$mS->label('pressure');?></td>
                        <?php if ($errors = $boilerForm->daPressure->renderErrors()) echo "<td>{$errors}</td>"; ?>
                </tr>
                <tr>
                    <th><?php echo $this->translator->_('Combustion Efficiency');?>*</th><td><?php echo $boilerForm->combustEff->renderViewhelper()." ".$mS->label('%');?></td>
                        <?php if ($errors = $boilerForm->combustEff->renderErrors()) echo "<td>{$errors}</td>"; ?>
                </tr>
                <tr>
                    <th><?php echo $this->translator->_('Blowdown Rate');?>*</th><td><?php echo $boilerForm->blowdownRate->renderViewhelper()." ".$mS->label('%');?></td>
                        <?php if ($errors = $boilerForm->blowdownRate->renderErrors()) echo "<td>{$errors}</td>"; ?>
                </tr>
                <tr><td colspan="2" style="text-align:center;"><h3><?php echo $this->translator->_('Steam');?></h3></td></tr>
                <?php echo $boilerForm->displaySteamFields('Steam'); ?>
                <tr>
                    <th><?php echo $this->translator->_('Steam Mass Flow');?> *</th><td><?php echo $boilerForm->massFlow->renderViewhelper()." ".$mS->label('massflow');?></td>
                        <?php if ($errors = $boilerForm->massFlow->renderErrors()) echo "<td>{$errors}</td>"; ?>
                </tr>
                <tr><td><span style="font-style:italic; color: grey;">* <?php echo $this->translator->_('Required');?></span></td><td style="text-align: center;"><?php echo $boilerForm->Enter->renderViewhelper();?>
                    <?php if (isset($formData->boiler)) echo "<span style='font-size: 1em; margin-left: 5px;'>[<a href=\"{$linkLocation}?reset=1\">{$this->translator->_('reset')}</a>]</span>";?></td></tr>
            </table>
        </form>
        <?php echo $this->partial('/index/partials/dataFieldHint.phtml'); ?>
        <?php 
        if (isset($_GET['random']) and isset($examples[$_GET['random']])) 
            echo "<span style='font-style: italic; color: darkblue;'>**".$this->translate("Example").": ".$this->translate($examples[$_GET['random']])."</span><BR><BR>"; ?>    
        <table class="data" id='exampleTable'>
            <tr>
                <th rowspan="2" style="vertical-align: middle;"><?php echo $this->translate('Examples'); ?>:</th>
                <td id="examplesHint" style="color: grey; font-style: italic;"><?php echo $this->translate('Mouse Over'); ?></td>
            </tr><tr id='examplesA' style="background-color: white;z-index: 30;">
                <?php foreach($examples as $key => $label): ?>
                <td><a href="<?php echo $linkLocation;?>?random=<?php echo $key;?>"><?php echo $this->translate($label);?></a></td>
                <?php endforeach;?>
            </tr>
        </table>
        <div style="width: 280px">
            <h3 style><?php echo $this->translator->_('Calculation Details and Assumptions below');?></h3>
        </div>
    </div>

    <?php
    if ($formValid){
        $boilerObject = new Steam_Equipment_Boiler(array(
            'boilerPressure' => $mS->standardize($_POST['SteamPressure'],'pressure'),
            'outletSteam' => $boilerForm->getSteamObject('Steam'),
            'blowdownRate' => ($_POST['blowdownRate']/100),
            'outletMassFlow' => $mS->standardize($_POST['massFlow'],'massflow'),
            'boilerEff' => ($_POST['combustEff']/100),
            'daPressure' => $mS->standardize($_POST['daPressure'],'pressure'),
        ));
        ?>
        <div style="float: right; width: 470px; margin-right: 20px;">
            <?php echo Steam_Support::displayWarnings($boilerObject);?>    

            <div style="position: relative; height: 630px;">
                <div style="position: absolute; left: 68px; top: 0px; z-index: 10;">  
                    <?php echo $this->partial('/index/partials/steam-detailsMassFlow.phtml', array(
                    'steamObject' => $boilerObject->outletSteam, 'steamName' => 'Steam'));?>
                </div>
                    <?php
                $tmp = new Steam_Model_Renderer();
                $boilerPosition = array(
                    'top' => 175,
                    'left' => 155,
                );
                echo $tmp->drawPipe( $boilerPosition['top']+13, $boilerPosition['left']-50, 500, 33, 'vh','Purple');
                echo $tmp->drawPipe( $boilerPosition['top']+32, $boilerPosition['left']+50, 360, 400, 'hv','Brown');
                echo $tmp->drawPipe( $boilerPosition['top']-31, $boilerPosition['left']+50, 60, 260, 'hv','Red');
                echo $tmp->drawSteamPoint(325, 33, 'Up.Right', 'Fine');
                echo $tmp->drawSteamPoint($boilerPosition['top']+13, $boilerPosition['left']-65, 'Right.Bottom', 'Fine');
                echo $tmp->drawSteamPoint($boilerPosition['top']+32, $boilerPosition['left']+65, 'Right.Top', 'Fine');
                echo $tmp->drawSteamPoint($boilerPosition['top']-31, $boilerPosition['left']+85, 'Right.Bottom', 'Fine');
                echo $tmp->drawSteamPoint(340, 400, 'Down.Right', 'Fine');
                echo $tmp->drawEquipment($boilerPosition['top'], $boilerPosition['left'], 'Boiler');
                ?>
                <div style="position: absolute; left: 68px; top: 230px; z-index: 10;"> 
                    <?php echo $boilerObject->displayBoilerDetails(); ?>
                </div>

                <div style="position: absolute; left: 68px; top: 360px; z-index: 10; height: 100px;">  
                    <?php echo $this->partial('/index/partials/steam-detailsMassFlow.phtml', array(
                    'steamObject' => $boilerObject->blowdown, 'steamName' => 'Blowdown'));?>
                </div>   

                <div style="position:  absolute; left: 0px; top: 500px; z-index: 10;">  
                    <?php echo $this->partial('/index/partials/steam-detailsMassFlow.phtml', array(
                    'steamObject' => $boilerObject->feedwater, 'steamName' => 'Feedwater'));?>
                </div>

            </div>
        </div>    
    <?php } ?>
</div>
<br style='clear: both;'><BR>

<h2><?php echo $this->translator->_('Calculation Details');?></h2>

<h3><?php echo $this->translator->_('Step 1: Determine Properties of Steam Produced');?></h3>
<span class="equationDescriptions"><?php echo $this->translator->_('Using the Steam Property Calculator, properties are determined using Steam Pressure and the selected second parameter (Temperature, Specific Enthalpy, Specific Entropy, or Quality). The Specific Enthalpy is then multiplied by the Mass Flow to get the Energy Flow');?>:</span>
<?php if ($formValid){ 
    $steamObject = $boilerObject->outletSteam; 
    $secParaDets = Steam_StdForm::secondParameterDetails($boilerForm->getValue('SteamSecondParameter')); ?>
<ul> 
    <li><span class="equationValues"><var><?php echo $this->translator->_('Pressure');?></var> = <?php echo $mS->displayPressureLabeled($steamObject->pressure);?></span></li>
    <li><span class="equationValues"><var><?php echo $this->translator->_($secParaDets[0]);?></var> = <?php echo $mS->$secParaDets[2]($steamObject->$secParaDets[1]);?></span></li>    
    <li><a href="<?php echo Steam_StdForm::propLink($steamObject, $boilerForm->getValue('SteamSecondParameter'));?>">[<?php echo $this->translator->_('Steam Property Calculator');?>]</a> => 
    <span class="equationValues"><var><?php echo $this->translator->_('Specific Enthalpy');?></var> = <?php echo $mS->displaySpecificEnthalpyLabeled($steamObject->specificEnthalpy);?></span></li>     
</ul>    
<?php } ?>
<ul>    
    <li><var><?php echo $this->translator->_('Steam Energy Flow');?></var> = <var><?php echo $this->translator->_('Specific Enthalpy');?></var> * <var><?php echo $this->translator->_('Mass Flow');?></var>
    <?php if ($formValid){ ?>
        <br>[ <span class="equationValues"><var><?php echo $this->translator->_('Steam Energy Flow');?></var> = <?php echo $mS->displayEnergyflowLabeled($steamObject->energyFlow);?> 
        = <?php echo $mS->displaySpecificEnthalpyLabeled($steamObject->specificEnthalpy);?> * <?php echo $mS->displayMassflowLabeled($steamObject->massFlow);?></span> ]
    <?php } ?></li>
</ul>
<br>


<h3><?php echo $this->translator->_('Step 2');?>: <?php echo $this->translator->_('Determine Feedwater Properties and Mass Flow');?></h3>
<span class="equationDescriptions"><?php echo $this->translator->_('The feedwater flow rate can be calculated from steam mass flow and blowdown rate');?>:</span>
<ol>
    <li><var><?php echo $this->translator->_('Blowdown Mass Flow');?></var> = <var><?php echo $this->translator->_('Feedwater Mass Flow');?></var> * <var><?php echo $this->translator->_('Blowdown Rate');?></var></li>
    <li><var><?php echo $this->translator->_('Steam Mass Flow');?></var> = <var><?php echo $this->translator->_('Feedwater Mass Flow');?></var> - <var><?php echo $this->translator->_('Blowdown Mass Flow');?></var></li>
    <li><var><?php echo $this->translator->_('Steam Mass Flow');?></var> = <var><?php echo $this->translator->_('Feedwater Mass Flow');?></var> - <var><?php echo $this->translator->_('Feedwater Mass Flow');?></var> * <var><?php echo $this->translator->_('Blowdown Rate');?></var></li>
    <li><var><?php echo $this->translator->_('Feedwater Mass Flow');?></var> = <var><?php echo $this->translator->_('Steam Mass Flow');?></var> / [ 1 - <var><?php echo $this->translator->_('Blowdown Rate');?></var> ]
    <?php if ($formValid){ ?>              
        <BR>[ <var><?php echo $this->translator->_('Feedwater Mass Flow');?></var> = <span class="equationValues"> <?php echo $mS->displayMassflowLabeled($boilerObject->feedwater->massFlow); ?> = 
        <?php echo $mS->displayMassflowLabeled($boilerObject->outletSteam->massFlow); ?> / ( 1 - <?php echo round($boilerObject->blowdownRate,3); ?> ) </span>]
    <?php } ?>
    </li>
</ol>

<span class="equationDescriptions"><?php echo $this->translator->_('Using the Steam Property Calculator, properties are determined using Deaerator Pressure '.
 'and Quality = 0 (Saturated Liquid). The Specific Enthalpy is then multiplied by the Mass Flow to get the Energy Flow');?>:</span>
<?php if ($formValid){ 
    $steamObject = $boilerObject->feedwater; 
    $secParam = "Quality"; //$boilerForm->getValue('SecondParameter');
    $secParaDets = Steam_StdForm::secondParameterDetails($secParam); ?>
<ul> 
    <li><span class="equationValues"><var><?php echo $this->translator->_('Pressure');?></var> = <?php echo $mS->displayPressureLabeled($steamObject->pressure);?></span></li>
    <li><span class="equationValues"><var><?php echo $this->translator->_($secParaDets[0]);?></var> = <?php echo $mS->$secParaDets[2]($steamObject->$secParaDets[1]);?></span></li>    
    <li><a href="<?php echo Steam_StdForm::propLink($steamObject, $secParam);?>">[<?php echo $this->translator->_('Steam Property Calculator');?>]</a> => 
    <span class="equationValues"><var><?php echo $this->translator->_('Specific Enthalpy');?></var> = <?php echo $mS->displaySpecificEnthalpyLabeled($steamObject->specificEnthalpy);?></span></li>     
</ul>    
<?php } ?>
<ul>    
    <li><var><?php echo $this->translator->_('Feedwater Energy Flow');?></var> = <var><?php echo $this->translator->_('Specific Enthalpy');?></var> * <var><?php echo $this->translator->_('Mass Flow');?></var>
    <?php if ($formValid){ ?>
        <br>[ <span class="equationValues"><var><?php echo $this->translator->_('Feedwater Energy Flow');?></var> = <?php echo $mS->displayEnergyflowLabeled($steamObject->energyFlow);?> 
        = <?php echo $mS->displaySpecificEnthalpyLabeled($steamObject->specificEnthalpy);?> * <?php echo $mS->displayMassflowLabeled($steamObject->massFlow);?></span> ]
    <?php } ?></li>
</ul>
<br>


<h3><?php echo $this->translator->_('Step 3');?>: <?php echo $this->translator->_('Determine Blowdown Properties and Mass Flow');?></h3>
<span class="equationDescriptions"><?php echo $this->translator->_('Using the calculated feedwater mass flow and blowdown rate');?>:</span>
<ul>
    <li><var><?php echo $this->translator->_('Blowdown Mass Flow');?></var> = <var><?php echo $this->translator->_('Feedwater Mass Flow');?></var> * <var><?php echo $this->translator->_('Blowdown Rate');?></var>
    <?php if ($formValid){ ?>              
        <BR>[ <var><?php echo $this->translator->_('Blowdown Mass Flow');?></var> = <span class="equationValues"> <?php echo $mS->displayMassflowLabeled($boilerObject->blowdown->massFlow); ?> = 
        <?php echo $mS->displayMassflowLabeled($boilerObject->feedwater->massFlow); ?> * <?php echo round($boilerObject->blowdownRate,3); ?> </span>]
    <?php } ?>
    </li>
</ul>

<span class="equationDescriptions"><?php echo $this->translator->_('Using the Steam Property Calculator, properties are determined using Steam Pressure '.
    'and Quality = 0 (Saturated Liquid). The Specific Enthalpy is then multiplied by the Mass Flow to get the Energy Flow');?>:</span>
<?php if ($formValid){ 
    $steamObject = $boilerObject->blowdown; 
    $secParam = "Quality"; //$boilerForm->getValue('SecondParameter');
    $secParaDets = Steam_StdForm::secondParameterDetails($secParam); ?>
<ul> 
    <li><span class="equationValues"><var><?php echo $this->translator->_('Pressure');?></var> = <?php echo $mS->displayPressureLabeled($steamObject->pressure);?></span></li>
    <li><span class="equationValues"><var><?php echo $this->translator->_($secParaDets[0]);?></var> = <?php echo $mS->$secParaDets[2]($steamObject->$secParaDets[1]);?></span></li>    
    <li><a href="<?php echo Steam_StdForm::propLink($steamObject, $secParam);?>">[<?php echo $this->translator->_('Steam Property Calculator');?>]</a> => 
    <span class="equationValues"><var><?php echo $this->translator->_('Specific Enthalpy');?></var> = <?php echo $mS->displaySpecificEnthalpyLabeled($steamObject->specificEnthalpy);?></span></li>     
</ul>    
<?php } ?>
<ul>    
    <li><var><?php echo $this->translator->_('Blowdown Energy Flow');?></var> = <var><?php echo $this->translator->_('Specific Enthalpy');?></var> * <var><?php echo $this->translator->_('Mass Flow');?></var>
    <?php if ($formValid){ ?>
        <br>[ <span class="equationValues"><var><?php echo $this->translator->_('Blowdown Energy Flow');?></var> = <?php echo $mS->displayEnergyflowLabeled($steamObject->energyFlow);?> 
        = <?php echo $mS->displaySpecificEnthalpyLabeled($steamObject->specificEnthalpy);?> * <?php echo $mS->displayMassflowLabeled($steamObject->massFlow);?></span> ]
    <?php } ?></li>
</ul>
<br>

<h3><?php echo $this->translator->_('Step 4');?>: <?php echo $this->translator->_('Determine Boiler Energy');?></h3>
<ul>
    <li><var><?php echo $this->translator->_('Boiler Energy');?></var> = <var><?php echo $this->translator->_('Steam Energy Flow');?></var> + <var><?php echo $this->translator->_('Blowdown Energy Flow');?></var> - <var><?php echo $this->translator->_('Feedwater Energy Flow');?></var>
    <?php if ($formValid){ ?>              
        <BR>[ <var><?php echo $this->translator->_('Boiler Energy (Flow)');?></var> = <span class="equationValues"> <?php echo $mS->displayEnergyflowLabeled($boilerObject->boilerEnergy); ?> = 
        <?php echo $mS->displayEnergyflowLabeled($boilerObject->outletSteam->energyFlow); ?>
            + <?php echo $mS->displayEnergyflowLabeled($boilerObject->blowdown->energyFlow); ?>
            - <?php echo $mS->displayEnergyflowLabeled($boilerObject->feedwater->energyFlow); ?> </span>]
    <?php } ?>
    </li>
</ul>
<h3><?php echo $this->translator->_('Step 5');?>: <?php echo $this->translator->_('Determine Fuel Energy');?></h3>
<ul>
    <li><var><?php echo $this->translator->_('Fuel Energy');?></var> = <var><?php echo $this->translator->_('Boiler Energy');?></var> / <var><?php echo $this->translator->_('Combustion Efficiency');?></var>
    <?php if ($formValid){ ?>              
        <BR>[ <var><?php echo $this->translator->_('Fuel Energy');?></var> = <span class="equationValues"> <?php echo $mS->displayEnergyflowLabeled($boilerObject->fuelEnergy); ?> = 
        <?php echo $mS->displayEnergyflowLabeled($boilerObject->boilerEnergy); ?>
            / <?php echo round($boilerObject->boilerEff,3); ?> </span>]
    <?php } ?>
    </li>
</ul>
<BR>


<h2><?php echo $this->translator->_('Assumptions');?></h2>
<ul>    
    <li><?php echo $this->translator->_('Deaerator provides feedwater near the boiling temperature for the deaerator\'s set operating pressure. (Saturated Liquid)');?></li>
    <li><?php echo $this->translator->_('Steam, Boiler, and Blowdown Pressure are the same.');?></li>    
    <li><?php echo $this->translator->_('Combustion Efficiency is the % of fuel energy that is directly added to the feedwater and not otherwise lost or used.');?></li>
    <li><?php echo $this->translator->_('Blowdown Rate is the % of incoming feedwater mass flow rate that leaves the boiler as a saturated liquid at boiler pressure.');?></li>
    <li><?php echo $this->translator->_('Does not include any evaluation of any complex boiler configurations or fluctuations in operation.');?></li>
    <li><?php echo $this->translator->_('Energy from motors (pumps, fans, etc.) are not considered.');?></li>
    <li><?php echo $this->translator->_('Boiler and fuel types are not considered.');?></li>
</ul>