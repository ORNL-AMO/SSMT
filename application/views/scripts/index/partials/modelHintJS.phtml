<?php
/**
 * Steam Calculators
 *
 * @package    View_Scripts
 * @version    beta
 * @author     Michael B Muller
 * <mbm@analyticalenergy.com>
 * 
 */
?>

$('#fieldDetails').hide();  

<?php 
$mS = Steam_MeasurementSystem::getInstance();

echo Steam_StdForm::hintDetails(array(
        'type' => 'combustEff',
        'fieldID' => "boilerEff",
        'title' => "Boiler Combustion Efficiency",                        
        'text' => "The % of fuel energy successfully added to the water in the boiler and not otherwise lost.",
    ));  
echo Steam_StdForm::hintDetails(array(
        'type' => 'blowdown',
        'fieldID' => "blowdownRate",
        'title' => "Blowdown Rate",
        'text' => "Percent of feedwater massflow leaving the boiler as blowdown.<BR><span style='font-style: italic;'>-Commonly between 1% to 5%",
    )); 
$minTemp = $mS->standardize(0,'temperaturediff','F');   
$maxTemp = $mS->standardize(300,'temperaturediff','F');   
echo Steam_StdForm::hintDetails(array(
        'fieldID' => "superheatTemp",
        'title' => "Degrees Above Boiling Temperature",
        'unit'  => $mS->unitName('temperature'),
        'text' => "Degrees Above Boiling Point Temperature.<BR><span style='font-style: italic;'>-0 equals saturated gas</span>",
        'min' => $mS->localize($minTemp,'temperaturediff'),
        'max' => $mS->localize($maxTemp,'temperaturediff'),
        'minLabeled' => $mS->displayTemperaturediffLabeled($minTemp),
        'maxLabeled' => $mS->displayTemperaturediffLabeled($maxTemp),
    ));  
echo Steam_StdForm::hintDetails(array(
        'fieldID' => "boilerTemp",
        'title' => "Steam Temperature",
        'unit'  => $mS->unitName('temperature'),
        'text' => "Temperature of steam generated by the boiler.<br>-<span style='font-style: italic; italic; color: red;'>Must be minimum temperature required to generate saturated steam.</span>",
        'min' => -999999,
        'max' => $mS->maxTemperature()-MINIMUM_ERROR,
        'minLabeled' => 'Boiling Temperature',
        'maxLabeled' => '<'.$mS->maxTemperatureLabeled(),  
    )); 

echo Steam_StdForm::hintDetails(array(
        'type' => 'ventRate',
        'fieldID' => "daVentRate",
        'title' => "Vent Rate",
        'text' => "Deaerator vent rate as a % of feedwater flow.<br>-<span style='font-style: italic;'>Commonly between 0.1 to 0.5</span>",
    )); 
echo  Steam_StdForm::hintDetails(array(
        'type' => 'critPressure',
        'fieldID' => "daPressure",
        'title' => "Deaerator Pressure",
        'text' => "Operating pressure of the deaerator used to determine the feedwater properties.<BR><span style='font-style: italic; color: red;'>MUST also be lower than the lowest steam header pressure</span>",
    ));             
echo Steam_StdForm::hintDetails(array(
        'fieldID' => "sitePowerImport",
        'title' => "Site Power Imported",
        'unit'  => $mS->unitName('power'),
        'text' => "Average power imported or exported. Does not include power generated and used onsite.<br>-<span style='font-style: italic;'>Negative if exporting.</span>",
        'min' => -999999,
        'max' => -999999,
        'minLabeled' => 'any',
        'maxLabeled' => 'any',
    )); 
echo Steam_StdForm::hintDetails(array(
        'fieldID' => "sitePowerCost",
        'title' => "Electricity Unit Cost",
        'unit'  => '$ / '.$mS->unitName('electricity'),
        'text' => "Average cost per unit of electricity",
        'min' => MINIMUM_ERROR,
        'max' => -999999,
        'minLabeled' => '> $ 0 / '.$mS->label('electricity'),
        'maxLabeled' => 'none',
    )); 
echo Steam_StdForm::hintDetails(array(
        'fieldID' => "operatingHours",
        'title' => "Yearly Operating Hours",
        'unit'  => $mS->unitName('hrs'),
        'text' => "Total operating hours over 1 year.",
        'min' => 1,
        'max' => 8760,
        'minLabeled' => '1 '.$mS->label('hrs'),
        'maxLabeled' => '8760 '.$mS->label('hrs'),
    )); 
echo Steam_StdForm::hintDetails(array(
        'fieldID' => "makeupWaterCost",
        'title' => "Make-Up Water Unit Cost",
        'unit'  => '$ / '.$mS->unitName('volume'),
        'text' => "Cost of Make up water per Volume",
        'min' => MINIMUM_ERROR,
        'max' => -999999,
        'minLabeled' => '> $ 0 / '.$mS->label('volume'),
        'maxLabeled' => 'none',
    )); 
      
$minTemp = $mS->standardize(40,'temperature','F');   
$maxTemp = $mS->standardize(160,'temperature','F');   
echo Steam_StdForm::hintDetails(array(
        'fieldID' => "makeupWaterTemp",
        'title' => "Make-Up Water Temperature",
        'unit'  => $mS->unitName('temperature'),
        'text' => "Average temperature of make-up water.<br>-<span style='font-style: italic;'>Generally close to average outside temperature.</span>",
        'min' => $mS->localize($minTemp,'temperature'),
        'max' => $mS->localize($maxTemp,'temperature'),
        'minLabeled' => $mS->displayTemperatureLabeled($minTemp),
        'maxLabeled' => $mS->displayTemperatureLabeled($maxTemp),
    )); 
echo Steam_StdForm::hintDetails(array(
        'fieldID' => "fuelUnitCost",
        'title' => "Fuel Unit Cost",
        'unit'  => '$ / '.$mS->unitName('energy'),
        'text' => "Cost of Fuel per Energy Unit.",
        'min' => MINIMUM_ERROR,
        'max' => -999999,
        'minLabeled' => '> $ 0 / '.$mS->label('energy'),
        'maxLabeled' => 'none',
    ));      
echo Steam_StdForm::hintDetails(array(
        'type' => 'maxPressure',
        'fieldID' => "highPressure",
        'title' => "HP: High Pressure",
        'unit'  => $mS->unitName('pressure'),
        'text' => "Pressure of the High Pressure (HP) Header.",
        'min' => $mS->minPressure(),
        'max' => $mS->maxPressure(),
        'minLabeled' => $mS->minPressureLabeled(),
        'maxLabeled' => $mS->critPressureLabeled(),
    )); 
echo Steam_StdForm::hintDetails(array(
        'type' => 'maxPressure',
        'fieldID' => "mediumPressure",
        'title' => "MP: Medium Pressure",
        'text' => "Pressure of the Medium Pressure (MP) Header.",
        'maxLabeled' => '< Proceeding Header',
    ));  
echo Steam_StdForm::hintDetails(array(
        'type' => 'maxPressure',
        'fieldID' => "lowPressure",
        'title' => "LP: Medium Pressure",
        'text' => "Pressure of the Low Pressure (MP) Header.",
        'maxLabeled' => '< Proceeding Header',
    )); 
echo Steam_StdForm::hintDetails(array(
        'type' => 'massflowInclusive',
        'fieldID' => "hpSteamUsage",
        'title' => "HP: Steam Usage",                        
        'text' => "High Pressure process steam usage. Includes any header steam leaks.",                        
    )); 
echo Steam_StdForm::hintDetails(array(
        'type' => 'massflowInclusive',
        'fieldID' => "mpSteamUsage",
        'title' => "MP: Steam Usage",
        'text' => "Medium Pressure process steam usage. Includes any header steam leaks.",                        
    )); 
echo Steam_StdForm::hintDetails(array(
        'type' => 'massflowInclusive',
        'fieldID' => "lpSteamUsage",
        'title' => "LP: Steam Usage",
        'text' => "Low Pressure process steam usage. Includes any header steam leaks.",
    )); 
echo Steam_StdForm::hintDetails(array(
        'type' => 'condensateReturn',
        'fieldID' => "hpCondReturnRate",
        'title' => "HP: Condensate Recovery Rate",
        'text' => "Percent of HP process steam use returned as condensate.",
    )); 
echo Steam_StdForm::hintDetails(array(
        'type' => 'condensateReturn',
        'fieldID' => "mpCondReturnRate",
        'title' => "MP: Condensate Recovery Rate",
        'text' => "Percent of MP process steam use returned as condensate.",
    )); 
echo Steam_StdForm::hintDetails(array(
        'type' => 'condensateReturn',
        'fieldID' => "lpCondReturnRate",
        'title' => "LP: Condensate Recovery Rate",
        'text' => "Percent of LP process steam use returned as condensate.",
    )); 
      
$minTemp = $mS->standardize(40,'temperature','F');   
$maxTemp = $mS->standardize(400,'temperature','F');  
echo Steam_StdForm::hintDetails(array(
        'fieldID' => "condReturnTemp",
        'title' => "Condensate Return Temperature",
        'unit'  => $mS->unitName('temperature'),
        'text' => "Average temperature of combined condensate returned.<br>-<span style='font-style: italic; color: red;'>Must be below boiling temperature.</span>",  
        'min' => $mS->minTemperature()+MINIMUM_ERROR,
        'max' => 999999, 
        'minLabeled' => $mS->minTemperatureLabeled(),
        'maxLabeled' => 'Boiling Temperature',
    ));      
echo Steam_StdForm::hintDetails(array(
        'type' => 'heatloss',
        'fieldID' => "hpHeatLossPercent",
        'title' => "Percent Heat Loss",
        'text' => "Header Heat Loss as a Percent of Energy Flow.",
    )); 
echo Steam_StdForm::hintDetails(array(
        'type' => 'heatloss',
        'fieldID' => "mpHeatLossPercent",
        'title' => "Percent Heat Loss",
        'text' => "Header Heat Loss as a Percent of Energy Flow.",
    )); 
echo Steam_StdForm::hintDetails(array(
        'type' => 'heatloss',
        'fieldID' => "lpHeatLossPercent",
        'title' => "Percent Heat Loss",
        'text' => "Header Heat Loss as a Percent of Energy Flow.",
    )); 
echo Steam_StdForm::hintDetails(array(
        'type' => 'temperature',
        'fieldID' => "desuperHeatHpMpTemp",
        'title' => "Target Desuperheating Temperature",
        'text' => "Target desuperheating temperature for the PRV outlet into MP",
    )); 
echo Steam_StdForm::hintDetails(array(
        'type' => 'temperature',
        'fieldID' => "desuperHeatMpLpTemp",
        'title' => "Target Desuperheating Temperature",
        'text' => "Target desuperheating temperature for the PRV outlet into LP",
    )); 
 
$turbines = array(
    'HpLp',
    'HpMp',
    'MpLp',
    'Cond',
);


echo Steam_StdForm::hintDetails(array(
        'type' => 'condPressure',
        'fieldID' => "turbineCondOutletPressure",
        'title' => "Condenser Pressure",
        'text' => "The pressure in the turbine's condenser associated with the condensing temperature.<br>-<span style='font-style:italic;'>-Commonly much less than atmospheric temperature.</span>",
    )); 

foreach($turbines as $turbine){
    echo Steam_StdForm::hintDetails(array(
            'type' => 'isoeff',
            'fieldID' => "turbine{$turbine}IsoEff",
            'title' => "Isentropic Efficiency",
            'text' => "The energy actually removed as a percent (%) of the energy removed if the turbine were an isentropic process (entropy in equal entropy out).<br>-<span style='font-style:italic;'>-Commonly 55% to 80%</span>",
        )); 
            
    echo Steam_StdForm::hintDetails(array(
            'type' => 'geneff',
            'fieldID' => "turbine{$turbine}GenEff",
            'title' => "Generation Efficiency",
            'text' => "The percent (%) of energy removed from steam that is converted to electricity.<br>-<span style='font-style:italic;'>-Commonly 90% to 99%</span>",
        )); 
    echo Steam_StdForm::hintDetails(array(
            'type' => 'massflow',
            'fieldID' => "turbine{$turbine}FixedFlow",
            'title' => "Fixed Mass Flow",
            'text' => "Fixed mass flow of steam through the turbine.",
        )); 
    echo Steam_StdForm::hintDetails(array(
            'type' => 'massflow',
            'fieldID' => "turbine{$turbine}MinFlow",
            'title' => "Minimum Mass Flow",
            'text' => "Minimum mass flow of steam through the turbine.",
            'min' => 0,
            'max' => -999999,
            'minLabeled' => '0 '.$mS->label('massflow'),
            'maxLabeled' => 'Maximum Flow',
        )); 
    echo Steam_StdForm::hintDetails(array(
            'type' => 'massflow',
            'fieldID' => "turbine{$turbine}MaxFlow",
            'title' => "Maximum Mass Flow",
            'unit'  => $mS->unitName('massflow'),
            'text' => "Maximum mass flow of steam through the turbine.",
        )); 
    echo Steam_StdForm::hintDetails(array(
            'type' => 'power',
            'fieldID' => "turbine{$turbine}FixedPower",
            'title' => "Fixed Power Generation",
            'text' => "Fixed power generation for the turbine.",
        )); 
    echo Steam_StdForm::hintDetails(array(
            'type' => 'power',
            'fieldID' => "turbine{$turbine}MinPower",
            'title' => "Minimum Power Generation",
            'text' => "Minimum power generation for the turbine.",
            'maxLabeled' => 'Maximum Power',
        )); 
    echo Steam_StdForm::hintDetails(array(
            'type' => 'power',
            'fieldID' => "turbine{$turbine}MaxPower",
            'title' => "Maximum Power Generation",
            'text' => "Maximum power generation for the turbine.",
        )); 
}
?>   